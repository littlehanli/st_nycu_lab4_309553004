plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'
}

test {
    useJUnitPlatform()
}

task printVersion {
    doLast {
        println archivesBaseName + '-' + version + '.jar'
    }
}

class ResolveProperties extends DefaultTask {

    @Input
    String prop

    ResolveProperties() {
        // if no --prop=<property> is provided, default to spitting out all properties
        prop = "properties"
    }

    @Option(option = 'prop', description = 'Set the property to be evaluated for the project.')
    void setProp(final String prop) {
        this.prop = prop
    }

    @TaskAction
    void resolveProp() {
        List<String> propPath = this.prop.tokenize('.')
        int n = propPath.size()
        def currentProp = project
        propPath.eachWithIndex { p, i ->
            if(currentProp.hasProperty(p)) {
                currentProp = currentProp.property(p)
            }
            else {
                throw new GradleException("failed to resolve property: ${this.prop}")
            }
        }
        println "${currentProp}"
    }
}

task resolveProperties(type: ResolveProperties)