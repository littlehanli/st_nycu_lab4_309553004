# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'

jobs:
  Compile:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Compile with Gradle
        run: gradle compileTestJava


  Test:
    needs: [Compile]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Test with Gradle
        run: gradle test

      - name: Publish Test Report
        uses: actions/upload-artifact@v2
        with:
          name: testReport
          path: build/reports/tests/test/*


  Assemble:
    needs: [Test]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Assemble with Gradle
        run: gradle assemble

      - name: Publish Jar File
        uses: actions/upload-artifact@v2
        with:
          name: buildJar
          path: build/libs

  Release:
    needs: [ Assemble ]
    runs-on: ubuntu-latest


    if: github.event_name == 'push' && contains(github.ref, '/tags/v')
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Artifact
        uses: actions/download-artifact@v2

      - name: Display structure of downloaded files
        run: ls -R

      - name: Publish artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # The GITHUB_REF tag comes in the format 'refs/tags/xxx'.
        # If we split on '/' and take the 3rd value,
        # we can get the release name.
        run: |
          NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
          echo "New version: ${NEW_VERSION}"
          echo "Github username: ${GITHUB_ACTOR}"
      #    ./gradlew -Pversion=${NEW_VERSION} publish


  #release-note:
  #  runs-on: ubuntu-latest

  #  steps:
  #    - name: Download Artifact
  #      uses: actions/download-artifact@v2

  #    - name: Display structure of downloaded files
